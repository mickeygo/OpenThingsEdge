@page "/settings/variable"
@inherits ProComponentBase
@inject VariableViewModel vm
@implements IDisposable

<MCard>
    <MRow>
        <MCol Cols="3">
            <MCardText>
                <MTreeview @bind-Active="_active"
                           TKey="String"
                           TItem="TreeModel"
                           Hoverable
                           Activatable
                           Items="_items"
                           ItemKey="u => u.Id"
                           ItemChildren="u => u.Children"
                           ItemText="u => u.Name">
                </MTreeview>
            </MCardText>
        </MCol>

        <MDivider Vertical></MDivider>

        <MCol class="d-flex">
            <MCardText>
                <ScrollYTransition>
                    @if (SelectedId is null)
                    {
                        <div class="text-h6 grey--text text--lighten-1 font-weight-light"
                             style="align-self: center;">
                        </div>
                    } 
                    else
                    {
                        <MCard @key="SelectedId" Flat MaxWidth=800>
                            <MCardTitle>
                                <MTextField @bind-Value="_search"
                                        AppendIcon="mdi-magnify"
                                        Label="Search"
                                        SingleLine
                                        HideDetails="true">
                                </MTextField>
                            </MCardTitle>
                            <MDataTable 
                                    Headers="_headers"
                                    Items="_tagItems"
                                    Search="@_search"
                                    HideDefaultFooter
                                    DisableSort
                                    ItemsPerPage=1024
                                    Class="elevation-1">
                                <ItemColContent>
                                    @if (context.Header.Value == nameof(TagModel.Flag))
                                    {
                                        <MChip Color="@GetColor(context.Item.Flag)">
                                            @context.Value
                                        </MChip>
                                    }
                                    else
                                    {
                                        @context.Value
                                    }
                                </ItemColContent>
                            </MDataTable>
                        </MCard>
                    }
                </ScrollYTransition>
            </MCardText>
        </MCol>
    </MRow>
</MCard>

@code {
    private List<string>? _active;
    private TreeModel? _selected;
    private List<TreeModel>? _treeItems;
    private List<TagModel>? _tagItems;
    private string? _search;

    public TreeModel? SelectedId
    {
        get
        {
            if (_active == null || _active.Count == 0)
            {
                return null;
            }

            var id = _active[0];
            var item = vm.FindTreeItem(_treeItems, id);
            if (item != _selected)
            {
                _tagItems = vm.GetTags(id, item?.Category);
                _selected = item;
            }

            return _selected;
        }
    }

    private List<DataTableHeader<TagModel>> _headers => VariableViewModel.GetHeaders(_selected?.Category);
    private List<TreeModel> _items => _treeItems ??= vm.GetDeviceTree();

    private IDisposable? _disposable;

    protected override void OnInitialized()
    {
        _disposable = Observable.Timer(TimeSpan.FromSeconds(3), TimeSpan.FromSeconds(1)).Subscribe(_ =>
        {
            InvokeAsync(() =>
            {
                _tagItems?.ForEach(s =>
                {
                    s.Text = vm.GetTagDataSnapshot(s.TagId);
                });
                StateHasChanged();
            });
        });
    }

    string GetColor(TagFlag flag) => flag switch
    {
        TagFlag.Heartbeat => "green",
        TagFlag.Notice => "blue",
        TagFlag.Trigger => "teal",
        TagFlag.Switch => "orange",
        _ => "",
    };

    public void Dispose()
    {
        _disposable?.Dispose();
    }
}
